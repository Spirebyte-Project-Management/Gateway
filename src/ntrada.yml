auth:
  enabled: true
  global: false
  claims:
    role: http://schemas.microsoft.com/ws/2008/06/identity/claims/role

http:
  retries: 2
  interval: 2.0
  exponential: true

useForwardedHeaders: true
passQueryString: true
forwardRequestHeaders: true
forwardResponseHeaders: true
generateRequestId: true
generateTraceId: true
useLocalUrl: true
loadBalancer:
  enabled: false
  url: localhost:9999

extensions:
  customErrors:
    includeExceptionMessage: true

  cors:
    allowCredentials: true
    allowedOrigins:
      - '*'
    allowedMethods:
      - POST
      - PUT
      - DELETE
    allowedHeaders:
      - '*'
    exposedHeaders:
      - Request-ID
      - Resource-ID
      - Trace-ID
      - Total-Count

  jwt:
    issuerSigningKey: eiquief5phee9pazo0Faegaez9gohThailiur5woy2befiech1oarai4aiLi6ahVecah3ie9Aiz6Peij
    validIssuer: spirebyte
    validateAudience: false
    validateIssuer: true
    validateLifetime: true

  swagger:
    name: Spirebyte
    reDocEnabled: false
    title: Spirebyte API
    version: v1
    routePrefix: docs
    includeSecurity: true

  tracing:
    serviceName: api-gateway
    udpHost: localhost
    udpPort: 6831
    maxPacketSize: 0
    sampler: const
    useEmptyTracer: false

modules:
  home:
    routes:
      - upstream: /
        method: GET
        use: return_value
        returnValue: Welcome to Spirebyte API!
          
  identity:
    path: identity
    routes:
      - upstream: /users
        methods:
          - GET
        matchAll: true
        use: downstream
        downstream: identity-service/users
        auth: true
    
      - upstream: /me
        method: GET
        use: downstream
        downstream: identity-service/me
        auth: true

      - upstream: /me
        method: PUT
        use: downstream
        downstream: identity-service/me
        auth: true

      - upstream: /forgot-password
        method: POST
        use: downstream
        downstream: identity-service/forgot-password
        auth: false

      - upstream: /reset-password
        method: POST
        use: downstream
        downstream: identity-service/reset-password
        auth: false
    
      - upstream: /sign-up
        method: POST
        use: downstream
        downstream: identity-service/sign-up
        auth: false
        resourceId:
          property: userId
          generate: true
    
      - upstream: /sign-in
        method: POST
        use: downstream
        downstream: identity-service/sign-in
        auth: false
        responseHeaders:
          content-type: application/json
    
    services:
      identity-service:
        localUrl: localhost:5004
        url: identity-service

  projects:
    path: projects
    routes:
      - upstream: /
        method: GET
        use: downstream
        downstream: projects-service/projects?ownerId=@user_id
        auth: true

      - upstream: /{key}
        method: GET
        use: downstream
        downstream: projects-service/projects/{key}
        auth: true

      - upstream: /{key}/join
        method: POST
        use: downstream
        downstream: projects-service/projects/{key}/join
        auth: true
        bind:
          - key:{key}

      - upstream: /{key}/leave
        method: POST
        use: downstream
        downstream: projects-service/projects/{key}/leave
        auth: true
        bind:
          - key:{key}

      - upstream: /doeskeyexist/{key}
        method: GET
        use: downstream
        downstream: projects-service/projects/doeskeyexist/{key}
        auth: true
    
      - upstream: /
        method: POST
        use: downstream
        downstream: projects-service/projects
        auth: true
        resourceId:
          property: projectId
          generate: true
        bind:
          - ownerId:@user_id

      - upstream: /{key}
        method: PUT
        use: downstream
        downstream: projects-service/projects/{key}
        auth: true
        bind:
          - key:{key}
    services:
      projects-service:
        localUrl: localhost:5001
        url: projects-service

  issues:
    path: issues
    routes:
      - upstream: /forProject/{projectKey}
        method: GET
        use: downstream
        downstream: issues-service/issues/forProject/{projectKey}
        auth: true

      - upstream: /epicsForProject/{projectKey}
        method: GET
        use: downstream
        downstream: issues-service/issues/epicsForProject/{projectKey}
        auth: true

      - upstream: /backlogForProject/{projectKey}
        method: GET
        use: downstream
        downstream: issues-service/issues/backlogForProject/{projectKey}
        auth: true

      - upstream: /{issueKey}
        method: GET
        use: downstream
        downstream: issues-service/issues/{issueKey}
        auth: true

      - upstream: /withIds
        methods:
          - GET
        matchAll: true
        use: downstream
        downstream: issues-service/issues/withIds
        auth: true
    
      - upstream: /{projectId}
        method: POST
        use: downstream
        downstream: issues-service/issues
        auth: true
        resourceId:
          property: issueId
          generate: true
        bind:
          - projectId:{projectId}

      - upstream: /{key}
        method: PUT
        use: downstream
        downstream: issues-service/issues/{key}
        auth: true
        bind:
          - key:{key}

      - upstream: /{key}
        method: DELETE
        use: downstream
        downstream: issues-service/issues/{key}
        auth: true
        bind:
          - key:{key}

    services:
      issues-service:
        localUrl: localhost:5003
        url: issues-service

  sprints:
    path: sprints
    routes:
      - upstream: /forProject/{projectKey}
        method: GET
        use: downstream
        downstream: sprints-service/sprints/forProject/{projectKey}
        auth: true

      - upstream: /{key}
        method: GET
        use: downstream
        downstream: sprints-service/sprints/{key}
        auth: true

      - upstream: /{sprintKey}/addIssue/{issueKey}
        method: POST
        use: downstream
        downstream: sprints-service/sprints/{sprintKey}/addIssue/{issueKey}
        auth: true
        bind:
          - sprintKey:{sprintKey}
          - issueKey:{issueKey}

      - upstream: /{sprintKey}/removeIssue/{issueKey}
        method: POST
        use: downstream
        downstream: sprints-service/sprints/{sprintKey}/removeIssue/{issueKey}
        auth: true
        bind:
          - sprintKey:{sprintKey}
          - issueKey:{issueKey}
    
      - upstream: /{projectId}
        method: POST
        use: downstream
        downstream: sprints-service/sprints
        auth: true
        resourceId:
          property: sprintId
          generate: true
        bind:
          - projectId:{projectId}
    
    services:
      sprints-service:
        localUrl: localhost:5005
        url: sprints-service